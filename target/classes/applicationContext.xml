<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd">
    
    <!-- 加载properties文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    
        
    <!-- 开启注解扫描 -->
    <context:component-scan base-package="com.zhiyou100" >
    	<!-- 不包含那个包下的 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <!-- 创建dataSource对象,数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
    	<!-- 3.1 给数据库属性赋值 -->
    	<property name="driverClassName" value="${jdbc.driver}" />
    	<property name="url" value="${jdbc.url}" />
    	<property name="username" value="${jdbc.username}" />
    	<property name="password" value="${jdbc.password}" />
    </bean>
    
    <!-- 创建切面类对象 : 事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    	<!-- 注入数据源 -->
    	<property name="dataSource" ref="dataSource"></property>
    </bean>
    
	<!-- 注解开发需要的事务配置 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!-- 明确切入点 
    	使用注解@transaction,加载需要事务的类或者方法
    -->
    
    
    <!-- 创建sqlsessionfactory -->
    <bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<!-- 加载mybatis配置文件 -->
    	<property name="configLocation" value="classpath:mybatis-config.xml" />
    	<!-- 注入数据源 -->
    	<property name="dataSource" ref="dataSource" ></property>
    	
    	<!-- 分页插件 -->
		<property name="plugins">
			<array>
				<bean class="com.github.pagehelper.PageHelper">
                   
                    <property name="properties">
                        <value>
                            <!--使用的数据库类型-->
                            dialect=mysql
                            reasonable=true
                            supportMethodsArguments=true
                            params=count=countSql
                            autoRuntimeDialect=true
                        </value>
                    </property>
                </bean>
			</array>
		</property>
    	
    	
    </bean>
    
    
    <!-- spring容器通过扫描mapper文件的位置生成mapper的代理对象 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    	<!-- 注入sqlsessionfactory -->
    	<property name="sqlSessionFactoryBeanName" value="sqlSessionFactoryBean"></property>
    	<!-- mapper文件的文职 -->
    	<property name="basePackage" value="com.zhiyou100.mapper"></property>
    </bean>
    
    
    
    	
</beans>